<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhinengshe.dao.naireresult.NaireresultMapper">
	<resultMap id="BaseResultMap" type="com.zhinengshe.pojo.naireresult.Naireresult">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="questionid" property="questionid" jdbcType="INTEGER" />
		<result column="questiontype" property="questiontype" jdbcType="INTEGER" />
		<result column="answer" property="answer" jdbcType="VARCHAR" />
		<result column="naireid" property="naireid" jdbcType="INTEGER" />
		<result column="periods" property="periods" jdbcType="VARCHAR" />
		<result column="commiter" property="commiter" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>

	<!-- 查询答案分布 -->
	<select id="selectAnswerDistribution" resultType="com.zhinengshe.pojo.naireresult.AnswerDistribution"
		parameterType="com.zhinengshe.pojo.naireresult.IdListAndPeriods">
		select
			questionid,answer, count(1) as distribution
		from 
			naireresult
		where 
			periods = #{periods}
		and
			questionid in
		<foreach collection="questionids" item="id" open="(" close=")"
			separator=",">
			#{id}
		</foreach>
		and 
			answer in
		<foreach collection="answerList" item="id" open="(" close=")"
			separator=",">
			#{id}
		</foreach>
		group by questionid,answer
	</select>



	<!-- 批量查询简答题结果 -->
	<select id="selectTextByIdListAndPeriods" resultMap="BaseResultMap"
		parameterType="com.zhinengshe.pojo.naireresult.IdListAndPeriods">
		select
		id,questionid,questiontype,answer,naireid,periods,commiter
		from naireresult

		where questionid in
		<foreach collection="idList" item="id" open="(" close=")"
			separator=",">
			#{id}
		</foreach>
		and periods = #{periods} GROUP BY questionid
	</select>
	<!-- 批量查询平均值 -->
	<select id="selectAvgByIdListAndPeriods" resultMap="BaseResultMap"
		parameterType="com.zhinengshe.pojo.naireresult.IdListAndPeriods">
		select
		id,questionid,questiontype,avg(answer) answer,naireid,periods,commiter
		from naireresult

		where questionid in
		<foreach collection="idList" item="id" open="(" close=")"
			separator=",">
			#{id}
		</foreach>
		and periods = #{periods} GROUP BY questionid
	</select>

	<!-- 插入list数据 -->
	<insert id="insertList" useGeneratedKeys="true" parameterType="java.util.List">
		<selectKey resultType="long" keyProperty="id" order="AFTER">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		insert into naireresult
		(questionid,questiontype,answer,naireid,periods,commiter)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.questionid},#{item.naireid},#{item.answer},#{item.naireid},#{item.periods},#{item.commiter})
		</foreach>
	</insert>


	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, questionid, questiontype, answer, naireid, periods, commiter
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.zhinengshe.pojo.naireresult.NaireresultExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from naireresult
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from naireresult
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from naireresult
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.zhinengshe.pojo.naireresult.NaireresultExample">
		delete from naireresult
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.zhinengshe.pojo.naireresult.Naireresult">
		insert into naireresult (id, questionid, questiontype,
		answer, naireid, periods,
		commiter)
		values (#{id,jdbcType=INTEGER}, #{questionid,jdbcType=INTEGER},
		#{questiontype,jdbcType=INTEGER},
		#{answer,jdbcType=VARCHAR}, #{naireid,jdbcType=INTEGER}, #{periods,jdbcType=VARCHAR},
		#{commiter,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.zhinengshe.pojo.naireresult.Naireresult">
		insert into naireresult
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="questionid != null">
				questionid,
			</if>
			<if test="questiontype != null">
				questiontype,
			</if>
			<if test="answer != null">
				answer,
			</if>
			<if test="naireid != null">
				naireid,
			</if>
			<if test="periods != null">
				periods,
			</if>
			<if test="commiter != null">
				commiter,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="questionid != null">
				#{questionid,jdbcType=INTEGER},
			</if>
			<if test="questiontype != null">
				#{questiontype,jdbcType=INTEGER},
			</if>
			<if test="answer != null">
				#{answer,jdbcType=VARCHAR},
			</if>
			<if test="naireid != null">
				#{naireid,jdbcType=INTEGER},
			</if>
			<if test="periods != null">
				#{periods,jdbcType=VARCHAR},
			</if>
			<if test="commiter != null">
				#{commiter,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.zhinengshe.pojo.naireresult.NaireresultExample"
		resultType="java.lang.Integer">
		select count(*) from naireresult
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update naireresult
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.questionid != null">
				questionid = #{record.questionid,jdbcType=INTEGER},
			</if>
			<if test="record.questiontype != null">
				questiontype = #{record.questiontype,jdbcType=INTEGER},
			</if>
			<if test="record.answer != null">
				answer = #{record.answer,jdbcType=VARCHAR},
			</if>
			<if test="record.naireid != null">
				naireid = #{record.naireid,jdbcType=INTEGER},
			</if>
			<if test="record.periods != null">
				periods = #{record.periods,jdbcType=VARCHAR},
			</if>
			<if test="record.commiter != null">
				commiter = #{record.commiter,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update naireresult
		set id = #{record.id,jdbcType=INTEGER},
		questionid = #{record.questionid,jdbcType=INTEGER},
		questiontype = #{record.questiontype,jdbcType=INTEGER},
		answer = #{record.answer,jdbcType=VARCHAR},
		naireid = #{record.naireid,jdbcType=INTEGER},
		periods = #{record.periods,jdbcType=VARCHAR},
		commiter = #{record.commiter,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.zhinengshe.pojo.naireresult.Naireresult">
		update naireresult
		<set>
			<if test="questionid != null">
				questionid = #{questionid,jdbcType=INTEGER},
			</if>
			<if test="questiontype != null">
				questiontype = #{questiontype,jdbcType=INTEGER},
			</if>
			<if test="answer != null">
				answer = #{answer,jdbcType=VARCHAR},
			</if>
			<if test="naireid != null">
				naireid = #{naireid,jdbcType=INTEGER},
			</if>
			<if test="periods != null">
				periods = #{periods,jdbcType=VARCHAR},
			</if>
			<if test="commiter != null">
				commiter = #{commiter,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.zhinengshe.pojo.naireresult.Naireresult">
		update naireresult
		set questionid = #{questionid,jdbcType=INTEGER},
		questiontype = #{questiontype,jdbcType=INTEGER},
		answer = #{answer,jdbcType=VARCHAR},
		naireid = #{naireid,jdbcType=INTEGER},
		periods = #{periods,jdbcType=VARCHAR},
		commiter = #{commiter,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>