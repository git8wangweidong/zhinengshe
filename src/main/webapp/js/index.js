$('.drag').draggable({ 
  appendTo: 'body',
  helper: 'clone'
});

$('#dropzone').droppable({
  activeClass: 'active',
  hoverClass: 'hover',
  accept: ":not(.ui-sortable-helper)", // Reject clones generated by sortable
  drop: function (e, ui) {
    // console.log(arguments);
    var type=$(ui.draggable[0]).attr('type');
    if(type=='a1'){
          var $el = $('<div class="drop-item"><details><summary>' + ui.draggable.text() + '</summary><div><input type="radio" /><label>11</label></div><input type="radio" /><label>11</label></div></details></div>');
    $el.append($('<button type="button" class="btn btn-default btn-xs remove"><span class="glyphicon glyphicon-trash"></span></button>').click(function () { $(this).parent().detach(); }));
  }else if(type=="a2"){
     var $el = $('<div class="drop-item"><details><summary>' + ui.draggable.text() + '</summary><div><input type="checkbox" /><label>11</label></div><input type="checkbox" /><label>11</label></div></details></div>');
    $el.append($('<button type="button" class="btn btn-default btn-xs remove"><span class="glyphicon glyphicon-trash"></span></button>').click(function () { $(this).parent().detach(); }));
  }else if(type=='b1'){
     var $el = $('<div class="drop-item"><details><summary>' + ui.draggable.text() + '</summary><div><input type="text" /><label>11</label></div><input type="text" /><label>11</label></div></details></div>');
    $el.append($('<button type="button" class="btn btn-default btn-xs remove"><span class="glyphicon glyphicon-trash"></span></button>').click(function () { $(this).parent().detach(); }));
  }
    $(this).append($el);
  }
  // ------------------------
}).sortable({
  items: '.drop-item',
  sort: function() {
    // gets added unintentionally by droppable interacting with sortable
    // using connectWithSortable fixes this, but doesn't allow you to customize active/hoverClass options
    $( this ).removeClass( "active" );
  }
});

$(function() { 
//获取class为caname的元素 
$(".caname").click(function() { 
var td = $(this); 
var txt = td.text(); 
var input = $("<input type='text'value='" + txt + "'/>"); 
td.html(input); 
input.click(function() { return false; }); 
//获取焦点 
input.trigger("focus"); 
//文本框失去焦点后提交内容，重新变为文本 
input.blur(function() { 
var newtxt = $(this).val(); 
//判断文本有没有修改 
if (newtxt != txt) { 
td.html(newtxt); 
/* 
*不需要使用数据库的这段可以不需要 
var caid = $.trim(td.prev().text()); 
//ajax异步更改数据库,加参数date是解决缓存问题 
var url = "../common/Handler2.ashx?caname=" + newtxt + "&caid=" + caid + "&date=" + new Date(); 
//使用get()方法打开一个一般处理程序，data接受返回的参数（在一般处理程序中返回参数的方法 context.Response.Write("要返回的参数");） 
//数据库的修改就在一般处理程序中完成 
$.get(url, function(data) { 
if(data=="1") 
{ 
alert("该类别已存在！"); 
td.html(txt); 
return; 
} 
alert(data); 
td.html(newtxt); 
}); 
*/ 
} 
else 
{ 
td.html(newtxt); 
} 
}); 
}); 
});